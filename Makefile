#############################################################################
# Makefile for building: Teknos
# Generated by qmake (2.01a) (Qt 4.4.3) on: pt. sty 23 15:02:26 2009
# Project:  Teknos.pro
# Template: app
# Command: /opt/qtcc/bin/qmake -unix -o Makefile Teknos.pro
#############################################################################

####### Compiler, tools and options

CC            = cc
CXX           = CC
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -O -mt $(DEFINES)
CXXFLAGS      = -O2 -mt $(DEFINES)
INCPATH       = -I/opt/qtcc/mkspecs/solaris-cc -I. -I/opt/qtcc/include/QtCore -I/opt/qtcc/include/QtCore -I/opt/qtcc/include/QtGui -I/opt/qtcc/include/QtGui -I/opt/qtcc/include -I. -I. -I. -I/usr/sfw/include
LINK          = CC
LFLAGS        = -mt -R/opt/qtcc/lib
LIBS          = $(SUBLIBS)  -L/usr/sfw/lib -L/opt/qtcc/lib -lQtGui -L/opt/qtcc/lib -L/usr/sfw/lib -L/usr/openwin/lib -lpng -lSM -lICE -lXi -lXrender -lXrandr -lfreetype -lfontconfig -lXext -lX11 -lresolv -lsocket -lnsl -lQtCore -lz -lm -lgthread-2.0 -lthread -lglib-2.0 -liconv -ldl -lpthread -lrt
AR            = CC -xar -o
RANLIB        = 
QMAKE         = /opt/qtcc/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -R
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = console.cpp \
		eval.cpp \
		interpreter.cpp \
		main.cpp \
		mainwindow.cpp \
		sand.cpp \
		sandbox.cpp \
		turtle.cpp moc_console.cpp \
		moc_mainwindow.cpp \
		moc_sand.cpp \
		moc_sandbox.cpp \
		moc_turtle.cpp \
		qrc_Teknos.cpp
OBJECTS       = console.o \
		eval.o \
		interpreter.o \
		main.o \
		mainwindow.o \
		sand.o \
		sandbox.o \
		turtle.o \
		moc_console.o \
		moc_mainwindow.o \
		moc_sand.o \
		moc_sandbox.o \
		moc_turtle.o \
		qrc_Teknos.o
DIST          = /opt/qtcc/mkspecs/common/unix.conf \
		/opt/qtcc/mkspecs/qconfig.pri \
		/opt/qtcc/mkspecs/features/qt_functions.prf \
		/opt/qtcc/mkspecs/features/qt_config.prf \
		/opt/qtcc/mkspecs/features/exclusive_builds.prf \
		/opt/qtcc/mkspecs/features/default_pre.prf \
		/opt/qtcc/mkspecs/features/release.prf \
		/opt/qtcc/mkspecs/features/default_post.prf \
		/opt/qtcc/mkspecs/features/warn_on.prf \
		/opt/qtcc/mkspecs/features/qt.prf \
		/opt/qtcc/mkspecs/features/unix/thread.prf \
		/opt/qtcc/mkspecs/features/moc.prf \
		/opt/qtcc/mkspecs/features/resources.prf \
		/opt/qtcc/mkspecs/features/uic.prf \
		/opt/qtcc/mkspecs/features/yacc.prf \
		/opt/qtcc/mkspecs/features/lex.prf \
		Teknos.pro
QMAKE_TARGET  = Teknos
DESTDIR       = 
TARGET        = Teknos

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Teknos.pro  /opt/qtcc/mkspecs/solaris-cc/qmake.conf /opt/qtcc/mkspecs/common/unix.conf \
		/opt/qtcc/mkspecs/qconfig.pri \
		/opt/qtcc/mkspecs/features/qt_functions.prf \
		/opt/qtcc/mkspecs/features/qt_config.prf \
		/opt/qtcc/mkspecs/features/exclusive_builds.prf \
		/opt/qtcc/mkspecs/features/default_pre.prf \
		/opt/qtcc/mkspecs/features/release.prf \
		/opt/qtcc/mkspecs/features/default_post.prf \
		/opt/qtcc/mkspecs/features/warn_on.prf \
		/opt/qtcc/mkspecs/features/qt.prf \
		/opt/qtcc/mkspecs/features/unix/thread.prf \
		/opt/qtcc/mkspecs/features/moc.prf \
		/opt/qtcc/mkspecs/features/resources.prf \
		/opt/qtcc/mkspecs/features/uic.prf \
		/opt/qtcc/mkspecs/features/yacc.prf \
		/opt/qtcc/mkspecs/features/lex.prf \
		/opt/qtcc/lib/libQtGui.prl \
		/opt/qtcc/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile Teknos.pro
/opt/qtcc/mkspecs/common/unix.conf:
/opt/qtcc/mkspecs/qconfig.pri:
/opt/qtcc/mkspecs/features/qt_functions.prf:
/opt/qtcc/mkspecs/features/qt_config.prf:
/opt/qtcc/mkspecs/features/exclusive_builds.prf:
/opt/qtcc/mkspecs/features/default_pre.prf:
/opt/qtcc/mkspecs/features/release.prf:
/opt/qtcc/mkspecs/features/default_post.prf:
/opt/qtcc/mkspecs/features/warn_on.prf:
/opt/qtcc/mkspecs/features/qt.prf:
/opt/qtcc/mkspecs/features/unix/thread.prf:
/opt/qtcc/mkspecs/features/moc.prf:
/opt/qtcc/mkspecs/features/resources.prf:
/opt/qtcc/mkspecs/features/uic.prf:
/opt/qtcc/mkspecs/features/yacc.prf:
/opt/qtcc/mkspecs/features/lex.prf:
/opt/qtcc/lib/libQtGui.prl:
/opt/qtcc/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile Teknos.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Teknos1.0.0 || $(MKDIR) .tmp/Teknos1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Teknos1.0.0/ && $(COPY_FILE) --parents console.h eval.h interpreter.h mainwindow.h sand.h sandbox.h turtle.h .tmp/Teknos1.0.0/ && $(COPY_FILE) --parents Teknos.qrc .tmp/Teknos1.0.0/ && $(COPY_FILE) --parents console.cpp eval.cpp interpreter.cpp main.cpp mainwindow.cpp sand.cpp sandbox.cpp turtle.cpp .tmp/Teknos1.0.0/ && (cd `dirname .tmp/Teknos1.0.0` && $(TAR) Teknos1.0.0.tar Teknos1.0.0 && $(COMPRESS) Teknos1.0.0.tar) && $(MOVE) `dirname .tmp/Teknos1.0.0`/Teknos1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Teknos1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) -r $(OBJECTS_DIR)Templates.DB $(OBJECTS_DIR)SunWS_cache
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_console.cpp moc_mainwindow.cpp moc_sand.cpp moc_sandbox.cpp moc_turtle.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_console.cpp moc_mainwindow.cpp moc_sand.cpp moc_sandbox.cpp moc_turtle.cpp
moc_console.cpp: console.h
	/opt/qtcc/bin/moc $(DEFINES) $(INCPATH) console.h -o moc_console.cpp

moc_mainwindow.cpp: sandbox.h \
		sand.h \
		turtle.h \
		console.h \
		interpreter.h \
		eval.h \
		mainwindow.h
	/opt/qtcc/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_sand.cpp: turtle.h \
		sand.h
	/opt/qtcc/bin/moc $(DEFINES) $(INCPATH) sand.h -o moc_sand.cpp

moc_sandbox.cpp: sand.h \
		turtle.h \
		console.h \
		interpreter.h \
		eval.h \
		sandbox.h
	/opt/qtcc/bin/moc $(DEFINES) $(INCPATH) sandbox.h -o moc_sandbox.cpp

moc_turtle.cpp: turtle.h
	/opt/qtcc/bin/moc $(DEFINES) $(INCPATH) turtle.h -o moc_turtle.cpp

compiler_rcc_make_all: qrc_Teknos.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_Teknos.cpp
qrc_Teknos.cpp: Teknos.qrc \
		turtel.png
	/opt/qtcc/bin/rcc -name Teknos Teknos.qrc -o qrc_Teknos.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

console.o: console.cpp console.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o console.o console.cpp

eval.o: eval.cpp eval.h \
		turtle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o eval.o eval.cpp

interpreter.o: interpreter.cpp interpreter.h \
		eval.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o interpreter.o interpreter.cpp

main.o: main.cpp mainwindow.h \
		sandbox.h \
		sand.h \
		turtle.h \
		console.h \
		interpreter.h \
		eval.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		sandbox.h \
		sand.h \
		turtle.h \
		console.h \
		interpreter.h \
		eval.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

sand.o: sand.cpp sand.h \
		turtle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sand.o sand.cpp

sandbox.o: sandbox.cpp sandbox.h \
		sand.h \
		turtle.h \
		console.h \
		interpreter.h \
		eval.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sandbox.o sandbox.cpp

turtle.o: turtle.cpp turtle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o turtle.o turtle.cpp

moc_console.o: moc_console.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_console.o moc_console.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_sand.o: moc_sand.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sand.o moc_sand.cpp

moc_sandbox.o: moc_sandbox.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sandbox.o moc_sandbox.cpp

moc_turtle.o: moc_turtle.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_turtle.o moc_turtle.cpp

qrc_Teknos.o: qrc_Teknos.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_Teknos.o qrc_Teknos.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

